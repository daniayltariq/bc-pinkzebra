{"version":3,"file":"theme-bundle.chunk.914.js","mappings":"onCAC2C,IAEtBA,EAAgB,SAAAC,G,QACjC,SAAAD,EAAYE,GAAS,IAAAC,EAIM,OAHvBA,EAAAF,EAAAG,KAAA,KAAMF,IAAQ,MACTG,SAAWC,EAAE,yBAClBH,EAAKI,kBAAoBD,EAAE,yBAC3BH,EAAKD,QAAUA,EAAQC,CAC3B,C,EANiCF,G,EAAAD,G,sEAMhC,IAAAQ,EAAAR,EAAAS,UAiKA,OAjKAD,EAEDE,QAAA,WACI,IAAMC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASH,QACnDI,KAAKC,WAAaL,EAAOM,IAAI,QAC7BF,KAAKG,aAAe,CAAC,EACrB,IAAK,IAAiEC,EAAtEC,EAAAC,EAA2B,IAAIT,gBAAgBC,OAAOC,SAASH,WAAOQ,EAAAC,KAAAE,MAAE,KAAAC,EAAAJ,EAAAK,MAA5DC,EAAGF,EAAA,GAAEC,EAAKD,EAAA,GACN,SAARE,IACAV,KAAKG,aAAaO,GAAOD,EAEjC,CACAT,KAAKW,oBAELX,KAAKY,UAAY,sBAEjB,IAAMC,EAAYjB,EAAOM,IAAI,cACzBW,GAAaA,EAAUC,SAAS,YAAcD,EAAUC,SAAS,gBACjEd,KAAKY,UAAY,yDACjBZ,KAAKe,aAAe,qHAE5B,EAACtB,EAEDkB,kBAAA,WAAoB,IAAAK,EAAA,KACVC,EAAc,CAChBC,IAAK,kBAAMF,EAAKG,YAAY,IAAItB,gBAAgBC,OAAOC,SAASH,QAAQ,EACxEwB,OAAQ,kBAAMJ,EAAKK,eAAe,IAAIxB,gBAAgBC,OAAOC,SAASH,QAAQ,GAG9EqB,GAAeA,EAAYjB,KAAKC,cAChCD,KAAKsB,SAAQ,GAEbL,EAAYjB,KAAKC,cAAcsB,MAAK,SAACC,GAC7BA,EAAYC,OAAS,EACrBT,EAAKU,cAAcF,GAEnBR,EAAKW,kBAETX,EAAKM,SAAQ,EACjB,IAAE,OAAO,SAACM,GACNZ,EAAKa,YAAYD,GACjBZ,EAAKM,SAAQ,EACjB,IAER,EAAC7B,EAEDiC,cAAA,SAAcF,GACV,IAAMM,EAAkBN,EAAYO,KAAI,SAAAC,GAAA,IACxBC,EAASD,EAArBE,WACWC,EAAQH,EAAnBI,UAIO,uFAHUJ,EAAjBK,QAMwB,6CACGJ,EAAS,IAAIE,EAAQ,6CAN5CH,EAAJM,KAO8B,KANzBN,EAALO,MAMwC,4FALpBP,EAApBQ,QAMoF,qEAEpFC,KAAK,IACLC,EAAY,GAEZ1C,KAAKe,eACL2B,EAAY,mCAAmC1C,KAAKe,aAAY,YAGpE,IAAM4B,EAAc,oDACgB3C,KAAKY,UAAS,sBAC5C8B,EAAS,oEAELZ,EAAe,uCAIzB9B,KAAKR,kBAAkBoD,KAAKD,GAE5B3C,KAAK6C,yBACT,EAACpD,EAEDkC,gBAAA,WAGI3B,KAAKR,kBAAkBoD,KAFH,wCAGxB,EAACnD,EAEDoC,YAAA,SAAYD,GACRkB,QAAQlB,MAAMA,GACd5B,KAAK2B,iBACT,EAAClC,EAED0B,YAAA,WAEI,IADA,IACsE4B,EADlEC,EAAU,GACdC,EAAA3C,EAA2B,IAAIT,gBAAgBC,OAAOC,SAASH,WAAOmD,EAAAE,KAAA1C,MAAE,KAAA2C,EAAAH,EAAAtC,MAA5DC,EAAGwC,EAAA,GAAEzC,EAAKyC,EAAA,GACN,YAARxC,IACAsC,EAAUvC,EAElB,CAEA,IAEM0C,EAFyBnD,KAAKb,QAAQiE,aAApCC,mBAEyB,4BAA4BL,EAC7D,OAAOM,EAAAA,EAAAA,IAAQH,EACnB,EAAC1D,EAED4B,eAAA,WAMI,IALA,IAKsEkC,EAL9DC,EAAYxD,KAAKb,QAAQiE,aAAzBI,QAEFC,EAAa,IAAIC,IAAOF,EAAO,UAC/BG,EAAc,IAAI9D,gBAAgB4D,EAAW7D,QAEnDgE,EAAAtD,EAA2B,IAAIT,gBAAgBC,OAAOC,SAASH,WAAO2D,EAAAK,KAAArD,MAAE,KAAAsD,EAAAN,EAAA9C,MAA5DC,EAAGmD,EAAA,GAAEpD,EAAKoD,EAAA,GACN,cAARnD,GAAuBD,EAAMgB,QAAU,GACvCkC,EAAYG,OAAO,aAAcrD,GAGzB,aAARC,GAAsBD,EAAMgB,QAAU,GACtCkC,EAAYG,OAAO,YAAarD,GAGxB,iBAARC,GAA0BD,EAAMgB,QAAU,GAC1CkC,EAAYG,OAAO,QAASrD,GAGpB,eAARC,GAAwBD,EAAMgB,QAAU,GACxCkC,EAAYG,OAAO,UAAWrD,GAGtB,aAARC,GAAsBD,EAAMgB,QAAU,GACtCkC,EAAYG,OAAO,QAASrD,EAEpC,CAIA,OAFAgD,EAAW7D,OAAS+D,EAAYI,YAEzBT,EAAAA,EAAAA,IAAQG,EAAWM,WAC9B,EAACtE,EAEDoD,wBAAA,WAEI,IADA,IAAMmB,EAAkBC,SAASC,uBAAuB,iBAC/CC,EAAI,EAAGA,EAAIH,EAAgBvC,OAAQ0C,IACxCH,EAAgBG,GAAGC,iBAAiB,SAAS,SAACC,GAC1C,IAAM7B,EAAUjD,EAAE8E,EAAMC,eAAeC,KAAK,WAEtC3E,EAAS,IAAIC,gBAAgBC,OAAOC,SAASH,QAC7C4E,GAAkB,MAAN5E,OAAM,EAANA,EAAQM,IAAI,gBAAiB,GAE3CuE,EAAS3E,OAAOC,SAAS2E,SAAQ,KAAK5E,OAAOC,SAAS4E,KAAOH,EAAS,eAAehC,EAD3E,oBAIJoC,KAAKhF,EAAOM,IAAI,iBACtBuE,EAAS3E,OAAOC,SAAS2E,SAAQ,KAAK5E,OAAOC,SAAS4E,KAAOH,EAAUK,QAAQ,4BAA6B,IAAG,qBAAqBrC,GAGxI1C,OAAOC,SAAS8E,QAAQJ,EAC5B,GAER,EAAChF,EAED6B,QAAA,SAAQwD,GACJ9E,KAAKV,SAASwF,EAAO,OAAS,SAClC,EAAC7F,CAAA,CAvKgC,CAAS8F,EAAAA,E","sources":["webpack://bigcommerce-cornerstone/./assets/js/theme/custom/consultant-search.js"],"sourcesContent":["import PageManager from '../page-manager';\nimport { getData } from '../../api-helper';\n\nexport default class ConsultantSearch extends PageManager {\n    constructor(context) {\n        super(context);\n        this.$overlay = $('.page .loadingOverlay');\n        this.$resultsContainer = $('.page #search-results');\n        this.context = context;\n    }\n\n    onReady() {\n        const search = new URLSearchParams(window.location.search);\n        this.searchType = search.get('type');\n        this.searchParams = {};\n        for (const [key, value] of new URLSearchParams(window.location.search)) {\n            if (key !== 'type') {\n                this.searchParams[key] = value;\n            }\n        }\n        this.searchConsultants();\n\n        this.pageTitle = 'Your search results';\n\n        const urlReturn = search.get('url_return');\n        if (urlReturn && urlReturn.includes('account') && urlReturn.includes('view_order')) {\n            this.pageTitle = 'The consultant assigned to your order will be updated.';\n            this.extraMessage = 'Please note that proceeding with this action will result in the removal of the Party ID associated with the order.';\n        }\n    }\n\n    searchConsultants() {\n        const searchTypes = {\n            zip: () => this.searchByZip(new URLSearchParams(window.location.search)),\n            params: () => this.searchByParams(new URLSearchParams(window.location.search)),\n        };\n\n        if (searchTypes && searchTypes[this.searchType]) {\n            this.loading(true);\n\n            searchTypes[this.searchType]().then((consultants) => {\n                if (consultants.length > 0) {\n                    this.handleResults(consultants);\n                } else {\n                    this.handleNoResults();\n                }\n                this.loading(false);\n            }).catch((error) => {\n                this.handleError(error);\n                this.loading(false);\n            });\n        }\n    }\n\n    handleResults(consultants) {\n        const consultantsHtml = consultants.map(({\n            first_name: firstName,\n            last_name: lastName,\n            rep_img: imageUrl,\n            city,\n            state,\n            website: websiteName,\n        }) => (`\n            <div class=\"consultant-information\">\n                <img src=\"${imageUrl}\"/>\n                <p class=\"fullname\" >${firstName} ${lastName}</p>\n                <p class=\"location\">${city}, ${state}</p>\n                <button class=\"button button--primary my-consultant\" data-website=\"${websiteName}\" href=\"#\">My consultant</button>\n            </div>\n        `)).join('');\n        let extraText = '';\n\n        if (this.extraMessage) {\n            extraText = `<span class=\"consultant-alert\"> ${this.extraMessage} </span>`;\n        }\n\n        const resultsHTML = `<div>\n            <h2 class=\"consultants-title\">${this.pageTitle}</h2>\n            ${extraText}\n            <div class=\"consultants-wrapper\">\n                ${consultantsHtml}\n            </div>\n        </div>`;\n\n        this.$resultsContainer.html(resultsHTML);\n\n        this.bindConsultantSelection();\n    }\n\n    handleNoResults() {\n        const resultsHTML = '<div>No consultants were found.</div>';\n\n        this.$resultsContainer.html(resultsHTML);\n    }\n\n    handleError(error) {\n        console.error(error);\n        this.handleNoResults();\n    }\n\n    searchByZip() {\n        let zipCode = '';\n        for (const [key, value] of new URLSearchParams(window.location.search)) {\n            if (key === 'zipcode') {\n                zipCode = value;\n            }\n        }\n\n        const { aws_cloudfront_url } = this.context.themeSetting;\n\n        const aws = `${aws_cloudfront_url}searchByZipCode?zip_code=${zipCode}`;\n        return getData(aws);\n    }\n\n    searchByParams() {\n        const { aws_url } = this.context.themeSetting;\n\n        const aws_search = new URL(`${aws_url}search`);\n        const queryParams = new URLSearchParams(aws_search.search);\n\n        for (const [key, value] of new URLSearchParams(window.location.search)) {\n            if (key === 'firstName' && value.length >= 1) {\n                queryParams.append('first_name', value);\n            }\n\n            if (key === 'lastName' && value.length >= 1) {\n                queryParams.append('last_name', value);\n            }\n\n            if (key === 'consultantId' && value.length >= 1) {\n                queryParams.append('repID', value);\n            }\n\n            if (key === 'webAddress' && value.length >= 1) {\n                queryParams.append('website', value);\n            }\n\n            if (key === 'location' && value.length >= 1) {\n                queryParams.append('state', value);\n            }\n        }\n\n        aws_search.search = queryParams.toString();\n\n        return getData(aws_search.toString());\n    }\n\n    bindConsultantSelection() {\n        const consultansFound = document.getElementsByClassName('my-consultant');\n        for (let i = 0; i < consultansFound.length; i++) {\n            consultansFound[i].addEventListener('click', (event) => {\n                const website = $(event.currentTarget).data('website');\n\n                const search = new URLSearchParams(window.location.search);\n                const returnUrl = search?.get('url_return') || '';\n                const regex = /[?&][^=#]+=[^&#]+/;\n                let url = `${window.location.protocol}//${window.location.host}${returnUrl}?consultant=${website}`;\n\n                // Test if we have any other query parameters. Currently, it is only used for my account\n                if (regex.test(search.get('url_return'))) {\n                    url = `${window.location.protocol}//${window.location.host}${returnUrl.replace(/&?consultant_order=[^&]*/g, '')}&consultant_order=${website}`;\n                }\n\n                window.location.replace(url);\n            });\n        }\n    }\n\n    loading(flag) {\n        this.$overlay[flag ? 'show' : 'hide']();\n    }\n}\n"],"names":["ConsultantSearch","_PageManager","context","_this","call","$overlay","$","$resultsContainer","_proto","prototype","onReady","search","URLSearchParams","window","location","this","searchType","get","searchParams","_step","_iterator","_createForOfIteratorHelperLoose","done","_step$value","value","key","searchConsultants","pageTitle","urlReturn","includes","extraMessage","_this2","searchTypes","zip","searchByZip","params","searchByParams","loading","then","consultants","length","handleResults","handleNoResults","error","handleError","consultantsHtml","map","_ref","firstName","first_name","lastName","last_name","rep_img","city","state","website","join","extraText","resultsHTML","html","bindConsultantSelection","console","_step2","zipCode","_iterator2","_step2$value","aws","themeSetting","aws_cloudfront_url","getData","_step3","aws_url","aws_search","URL","queryParams","_iterator3","_step3$value","append","toString","consultansFound","document","getElementsByClassName","i","addEventListener","event","currentTarget","data","returnUrl","url","protocol","host","test","replace","flag","PageManager"],"sourceRoot":""}