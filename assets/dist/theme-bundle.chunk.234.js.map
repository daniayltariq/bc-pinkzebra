{"version":3,"file":"theme-bundle.chunk.234.js","mappings":"kdAKgD,IAE3BA,EAAS,SAAAC,G,QAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,K,EAAAF,G,EAAAD,G,sEAAA,IAAAI,EAAAJ,EAAAK,UAmEzB,OAnEyBD,EAC1BE,QAAA,WACIC,KAAKC,gCACLD,KAAKE,qBACT,EAACL,EAEDI,8BAAA,WACI,IAAME,EAAe,0BACfC,GAAqBC,EAAAA,EAAAA,GAAI,CAC3BC,OAAWH,EAAY,wBACvBI,IAAKC,EAAAA,KAEHC,EAAeC,EAAEP,GAEvBC,EAAmBO,IAAI,CACnB,CACIC,SAAaT,EAAY,+BACzBU,SAAU,SAACC,EAAIC,GAGXD,EAFeE,EAAAA,EAAMC,MAAMF,GAG/B,EACAG,aAAclB,KAAKmB,QAAQC,cAE/B,CACIR,SAAaT,EAAY,qCACzBU,SAAU,SAACC,EAAIC,GAGXD,EAFeE,EAAAA,EAAMK,SAASN,GAGlC,EACAG,aAAclB,KAAKmB,QAAQG,mBAInCb,EAAac,GAAG,UAAU,SAAAC,GACtBpB,EAAmBqB,eAEfrB,EAAmBsB,OAAO,UAI9BF,EAAMG,gBACV,GACJ,EAAC9B,EAEDK,oBAAA,WACIQ,EAAE,sCAAsCJ,QAAO,SAACsB,GAC5CA,EAAGD,iBAKH,IAJA,IAI6CE,EAJvCC,EAAW,IAAIC,SAASH,EAAGI,QAE3BC,EAAmB,IAAIF,SACzBG,GAAU,EACdC,E,0sBAAAC,CAA2BN,EAASO,aAASR,EAAAM,KAAAG,MAAE,KAAAC,EAAAV,EAAAW,MAAnCC,EAAGF,EAAA,GAAEC,EAAKD,EAAA,GACdC,GAASA,EAAME,OAAOC,OAAS,IAC/BV,EAAiBW,OAAOH,EAAKD,GAC7BN,GAAU,EAElB,CAEA,GAAIA,GACAW,EAAAA,EAAAA,IAAe,oDACZ,CACH,IAAMC,GAAMC,EAAAA,EAAAA,GAAuBd,GACnCe,OAAOC,SAASC,QAAQJ,EAC5B,CACJ,GACJ,EAACrD,CAAA,CAnEyB,CAAS0D,EAAAA,E","sources":["webpack://bigcommerce-cornerstone/./assets/js/theme/contact-us.js"],"sourcesContent":["import PageManager from './page-manager';\nimport nod from './common/nod';\nimport forms from './common/models/forms';\nimport { announceInputErrorMessage } from './common/utils/form-utils';\nimport { getConsultantResultURL } from './consultant/find-a-consultant/find-a-consultant';\nimport { showAlertModal } from './global/modal';\n\nexport default class ContactUs extends PageManager {\n    onReady() {\n        this.registerContactFormValidation();\n        this.bindSearchConsulant();\n    }\n\n    registerContactFormValidation() {\n        const formSelector = 'form[data-contact-form]';\n        const contactUsValidator = nod({\n            submit: `${formSelector} input[type=\"submit\"]`,\n            tap: announceInputErrorMessage,\n        });\n        const $contactForm = $(formSelector);\n\n        contactUsValidator.add([\n            {\n                selector: `${formSelector} input[name=\"contact_email\"]`,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.contactEmail,\n            },\n            {\n                selector: `${formSelector} textarea[name=\"contact_question\"]`,\n                validate: (cb, val) => {\n                    const result = forms.notEmpty(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.contactQuestion,\n            },\n        ]);\n\n        $contactForm.on('submit', event => {\n            contactUsValidator.performCheck();\n\n            if (contactUsValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    bindSearchConsulant() {\n        $('form[data-contact-consultant-form]').submit((ev) => {\n            ev.preventDefault();\n            const formData = new FormData(ev.target);\n\n            const filteredFormData = new FormData();\n            let isEmpty = true;\n            for (const [key, value] of formData.entries()) {\n                if (value && value.trim().length > 0) {\n                    filteredFormData.append(key, value);\n                    isEmpty = false;\n                }\n            }\n\n            if (isEmpty) {\n                showAlertModal('Please fill in any input to start to search!');\n            } else {\n                const url = getConsultantResultURL(filteredFormData);\n                window.location.replace(url);\n            }\n        });\n    }\n}\n"],"names":["ContactUs","_PageManager","apply","arguments","_proto","prototype","onReady","this","registerContactFormValidation","bindSearchConsulant","formSelector","contactUsValidator","nod","submit","tap","announceInputErrorMessage","$contactForm","$","add","selector","validate","cb","val","forms","email","errorMessage","context","contactEmail","notEmpty","contactQuestion","on","event","performCheck","areAll","preventDefault","ev","_step","formData","FormData","target","filteredFormData","isEmpty","_iterator","_createForOfIteratorHelperLoose","entries","done","_step$value","value","key","trim","length","append","showAlertModal","url","getConsultantResultURL","window","location","replace","PageManager"],"sourceRoot":""}