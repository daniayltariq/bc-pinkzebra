{"components/common/navigation-pz":"<nav class=\"navUser--pz\">\n  <ul>\n    <li class=\"nav--item\">\n      <a href=\"{{urls.home}}\" class=\"header-logo__link\" data-header-logo-link>\n        <img class=\"header-logo-image\" src=\"{{getImage settings.store_logo.image 'logo_size'}}\"\n          srcset=\"{{getImageSrcset1x2x settings.store_logo.image theme_settings.logo_size}}\"\n          alt=\"{{settings.store_logo.title}}\" title=\"{{settings.store_logo.title}}\">\n      </a>\n    </li>\n\n    <!-- Consultant TBD -->\n    <li class=\"nav--item consultant--container\">\n      <img class=\"image consultant-preview\" src=\"\">\n      <div class=\"information\">\n        <span>{{lang 'header.pz.shopping_with'}}</span>\n        <span class=\"consultant-name\"></span>\n        <div class=\"location\">\n          <svg class=\"pz-phone-icon\">\n            <use href=\"#icon-PZ_Phone\"></use>\n          </svg>\n          <span class=\"consultant-location\"></span>\n        </div>\n      </div>\n\n      <!-- Change consultant -->\n      {{#if page_type '!=' 'orderconfirmation'}}\n      <div class=\"action\">\n        <a class=\"button button--primary button--large open-find-consultant\" tabindex=\"0\">{{lang 'header.pz.change_my_consultant'}}</a>\n      </div>\n      {{/if}}\n    </li>\n\n  </ul>\n</nav>\n\n<script>\n  function setConsultant(consultant) {\n    const nameElement = document.querySelector('.consultant-name');\n    if (nameElement)\n      nameElement.innerHTML = consultant.value.name;\n    \n    const locationElement = document.querySelector('.consultant-location');\n    if (locationElement)\n      if (!consultant.value.state)\n        locationElement.remove();\n      else\n        locationElement.innerHTML = consultant.value.state;\n\n    const imageElement = document.querySelector('.image.consultant-preview');\n    if (imageElement) {\n      if (!consultant.value.img)\n        imageElement.remove();\n      else\n        imageElement.src = consultant.value.img;\n    }\n  };\n\n  const consultant = JSON.parse(localStorage.getItem('consultant'));\n  if (consultant) {\n    setConsultant(consultant);\n  }\n\n</script>","components/common/polyfill-script":"<script>\n    {{!--\n        Check for modern browser features, and load polyfills if browser does not appear to support features\n        we need.\n\n            Polyfill approach is all or nothing - please import needed polyfills in /assets/js/polyfills.js\n\n        Inspired by https://philipwalton.com/articles/loading-polyfills-only-when-needed/\n            --}}\n    function browserSupportsAllFeatures() {\n        return window.Promise\n            && window.fetch\n            && window.URL\n            && window.URLSearchParams\n            && window.WeakMap\n            // object-fit support\n            && ('objectFit' in document.documentElement.style);\n    }\n\n    function loadScript(src) {\n        var js = document.createElement('script');\n        js.src = src;\n        js.onerror = function () {\n            console.error('Failed to load polyfill script ' + src);\n        };\n        document.head.appendChild(js);\n    }\n\n    if (!browserSupportsAllFeatures()) {\n        loadScript('{{cdn 'assets/dist/theme-bundle.polyfills.js'}}');\n    }\n</script>\n","layout/checkout":"<!DOCTYPE html>\n<html class=\"no-js\" lang=\"{{ locale_name }}\">\n    <head>\n        <title>{{ head.title }}</title>\n        {{{ resourceHints }}}\n        {{{ head.meta_tags }}}\n        {{{ head.config }}}\n        {{#block \"head\"}} {{/block}}\n\n        <style type=\"text/css\" media=\"screen, print\">\n          @font-face {\n              font-family: \"Northwell\";\n              src: url(\"{{cdn 'fonts/Northwell.ttf'}}\");\n          }\n        </style>\n\n        <link href=\"{{ head.favicon }}\" rel=\"shortcut icon\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <script>\n            {{!-- Change document class from no-js to js so we can detect this in css --}}\n            document.documentElement.className = document.documentElement.className.replace('no-js', 'js');\n        </script>\n\n        {{> components/common/polyfill-script }}\n        <script>window.consentManagerTranslations = `{{{langJson 'consent_manager'}}}`;</script>\n\n        {{!-- Load Lazysizes script ASAP so images will appear --}}\n        <script>\n            {{!-- Only load visible elements until the onload event fires, after which preload nearby elements. --}}\n            window.lazySizesConfig = window.lazySizesConfig || {};\n            window.lazySizesConfig.loadMode = 1;\n        </script>\n        <script async src=\"{{cdn 'assets/dist/theme-bundle.head_async.js' resourceHint='preload' as='script'}}\"></script>\n        \n        {{getFontsCollection font-display='block'}}\n        \n        <script async src=\"{{cdn 'assets/dist/theme-bundle.font.js' resourceHint='preload' as='script'}}\"></script>\n\n        {{{stylesheet '/assets/css/theme.css'}}}\n\n        {{{head.scripts}}}\n\n        {{~inject 'zoomSize' theme_settings.zoom_size}}\n        {{~inject 'productSize' theme_settings.product_size}}\n        {{~inject 'genericError' (lang 'common.generic_error')}}\n        {{~inject 'urls' urls}}\n        {{~inject 'secureBaseUrl' settings.secure_base_url}}\n        {{~inject 'cartId' cart_id}}\n        {{~inject 'template' template}}\n        {{~inject 'validationDictionaryJSON' (langJson 'validation_messages')}}\n        {{~inject 'validationFallbackDictionaryJSON' (langJson 'validation_fallback_messages')}}\n        {{~inject 'validationDefaultDictionaryJSON' (langJson 'validation_default_messages')}}\n        {{~inject 'carouselArrowAndDotAriaLabel' (lang 'carousel.arrow_and_dot_aria_label')}}\n        {{~inject 'carouselActiveDotAriaLabel' (lang 'carousel.active_dot_aria_label')}}\n        {{~inject 'carouselContentAnnounceMessage' (lang 'carousel.content_announce_message')}}\n        {{~inject 'themeSetting' theme_settings}}\n        {{~inject 'storefrontAPIToken' settings.storefront_api.token}}\n        {{~inject 'customer' customer}}\n        {{~inject 'pzAPIEndpoint' theme_settings.pz_api_endpoint}}\n    </head>\n    <body>\n        <svg data-src=\"{{cdn 'img/icon-sprite.svg'}}\" class=\"icons-svg-sprite\"></svg>\n\n        {{#block \"page\"}}{{/block}}\n\n        <script>window.__webpack_public_path__ = \"{{cdn 'assets/dist/'}}\";</script>\n        <script>\n            {{!-- Exported in app.js --}}\n            function onThemeBundleMain() {\n                window.stencilBootstrap(\"{{page_type}}\", {{jsContext}}).load();\n            }\n        </script>\n        <script async defer src=\"{{cdn 'assets/dist/theme-bundle.main.js' resourceHint='preload' as='script'}}\" onload=\"onThemeBundleMain()\"></script>\n\n        {{{footer.scripts}}}\n    </body>\n</html>\n","pages/checkout":"{{#partial \"head\"}}\n    {{{ checkout.checkout_head }}}\n    {{{ stylesheet '/assets/css/optimized-checkout.css' }}}\n    {{{ stylesheet '/assets/css/layouts/checkout/checkout.css' }}}\n    {{ getFontsCollection }}\n    {{inject 'pageType' page_type}}\n\n    <script type=\"text/javascript\">\n        window.language = {{{langJson 'optimized_checkout'}}};\n    </script>\n\n    {{{head.scripts}}}\n{{/partial}}\n\n{{#partial \"page\"}}\n    {{> components/common/navigation-pz}}\n    \n    {{{ checkout.checkout_content }}}\n\n    <script>\n        // Imported snipped to listen to checkout steps when ready\n        (function(win) {\n            'use strict';\n            var listeners = [],\n            doc = win.document,\n            MutationObserver = win.MutationObserver || win.WebKitMutationObserver,\n            observer;\n\n            function ready(selector, fn) {\n                // Store the selector and callback to be monitored\n                listeners.push({\n                    selector: selector,\n                    fn: fn\n                });\n                if (!observer) {\n                    // Watch for changes in the document\n                    observer = new MutationObserver(check);\n                    observer.observe(doc.documentElement, {\n                        childList: true,\n                        subtree: true\n                    });\n                }\n                // Check if the element is currently in the DOM\n                check();\n            }\n\n            function check() {\n                // Check the DOM for elements matching a stored selector\n                for (var i = 0, len = listeners.length, listener, elements; i < len; i++) {\n                    listener = listeners[i];\n                    // Query for elements matching the specified selector\n                    elements = doc.querySelectorAll(listener.selector);\n                    for (var j = 0, jLen = elements.length, element; j < jLen; j++) {\n                        element = elements[j];\n                        // Make sure the callback isn't invoked with the\n                        // same element more than once\n                        if (!element.ready) {\n                            element.ready = true;\n                            // Invoke the callback with the element\n                            listener.fn.call(element, element);\n                        }\n                    }\n                }\n            }\n\n            // Expose `ready`\n            win.ready = ready;\n        })(this);\n\n        // When checkout step form is ready\n        ready('.checkout-step form', function(form) {\n            const checkoutStepNumbers = document.querySelector('.remove-checkout-step-numbers');\n            const customerStep = document.getElementById('checkout-customer-guest');\n            const shippingContinueBtn = document.getElementById('checkout-shipping-continue');\n            const billingContinueBtn = document.getElementById('checkout-billing-continue');\n            const placeOrderBtn = document.getElementById('checkout-payment-continue');\n            const paymentStep = document.querySelector('.checkout-step--payment .checkout-view-content');\n            const cartDrawer = document.querySelector('.cartDrawer.optimizedCheckout-orderSummary');\n\n            if (cartDrawer) {\n                const cartDrawerPrice = cartDrawer.querySelector('.cartDrawer-actions');\n                const title = document.createElement('h3');\n                title.className = 'cartDrawer-total optimizedCheckout-headingPrimary';\n                title.innerHTML = 'Total';\n                cartDrawerPrice.prepend(title);\n            }\n\n            if (checkoutStepNumbers) {\n                checkoutStepNumbers.className = '';\n            }\n\n            if (customerStep) {\n                document.getElementById('checkout-customer-continue').innerHTML = 'Continue as guest';\n                document.getElementById('email-label').innerHTML = 'Email (for your confirmation)';\n            }\n\n            if (shippingContinueBtn) {\n                shippingContinueBtn.innerHTML = 'Continue to billing';\n            }\n            \n            if (billingContinueBtn) {\n                billingContinueBtn.innerHTML = 'Continue to payment';\n            }\n\n            if (placeOrderBtn) {\n                placeOrderBtn.classList.add('button--primary');\n            }\n\n            if (paymentStep) {\n                const paymentForm = paymentStep.querySelector('.checkout-form');\n                const div = document.createElement('div');\n                div.className = 'form-legend-container';\n                const legend = document.createElement('legend');\n                legend.className = 'form-legend optimizedCheckout-headingSecondary';\n                legend.setAttribute('data-test', 'payment-heading');\n                legend.innerHTML = 'Payment Method';\n                paymentForm.prepend(legend);\n            }\n\n        });\n        \n        ready('.checkout-address', function() {\n            const shippingStep = document.getElementById('checkoutShippingAddress');\n            const billingStep = document.getElementById('checkoutBillingAddress');\n            const addressesInputs = document.querySelector('.checkout-address');\n            const provinceOpt1 = document.getElementById('provinceInput-label');\n            const provinceOpt2 = document.getElementById('provinceCodeInput-label');\n\n            if (shippingStep || billingStep) {\n                const allowedCountries = ['canada', 'ca', 'us', 'united states'];\n                const selectElement = document.querySelector('#countryCodeInput');\n                for (let i = selectElement.options.length - 1; i > 0; i--) {\n                    const option = selectElement.options[i];\n                    const optionValue = option.value;\n                    if (optionValue && !allowedCountries.includes(optionValue.toLowerCase())) {\n                        selectElement.remove(i);\n                    }\n                }\n\n                if (addressesInputs) {\n                    document.getElementById('addressLine2Input-label').innerHTML = 'Apartment/Suite/Building (optional)';\n                    document.getElementById('companyInput-label').innerHTML = 'Company name (optional)';\n                    document.getElementById('phoneInput-label').innerHTML = 'Phone number';\n    \n                    if (provinceOpt1) {\n                        if (provinceOpt1.querySelector('.optimizedCheckout-contentSecondary')) {\n                            provinceOpt1.querySelector('.optimizedCheckout-contentSecondary').className = 'u-hidden' ;\n                        }\n                    } else {\n                        if (provinceOpt2.querySelector('.optimizedCheckout-contentSecondary')) {\n                            provinceOpt2.querySelector('.optimizedCheckout-contentSecondary').className = 'u-hidden' ;\n                        }\n                    } \n    \n                    document.getElementById('postCodeInput-label').innerHTML = 'Zip/Post Code';\n                }\n            }\n        })\n    </script>\n\n    {{{ footer.scripts }}}\n{{/partial}}\n\n{{> layout/checkout}}"}
